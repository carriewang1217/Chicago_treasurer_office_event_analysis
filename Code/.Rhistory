72792/12
630000+72000+521000+120000+17000
(263-145.5)*500+(263-199.5)*500+(263-211.21)*300+(263-219.15)*300
install.packages("swirl")
(5-6-2+0-2+1+0+4-3-6) / 10
(7+3+1+9+7)/5 + (8+4+8+9+7)/5
(7+3+1+9+7)/5 - (8+4+8+9+7)/5
c(1,2,3,4,5,6)
mean(c)
wow <- c(1,2,3,4,5,6)
mean(wow)
median(wow)
var(wow)
wow <- c(1,2,3,4,5,6,7,8,9)
mean(wow)
median(wow)
var(wow)
sum(wow)
var(sum(wow))
0.5*(26-(26-46/3))*46/3 + 0.5*(20-(20-0.5*46/3))*46/3
0.5*(26-(26-46/3))*(46/3) + 0.5*(20-(20-0.5*46/3))*(46/3)
166.67*416.67-100*166.67
600-0.5*750
500*225-100*750
37500 - 52779.39/2
0.5*(1000-500)*(350-100)
450*0.5/0.75
600- 0.5*450
set.seed(12)
x <- rnorm(200, 3, 1)
set.seed(12)
x <- rnorm(200, 3, 1)
u <- rnorm(200, 0, 1)
y = -2 + 3*x + u
## b.Generate a mismeasured version of x,
e = rnorm(200, 0, 1)
tilde.x = x + e
## a. run a regression of y on x.
lm(y ~ x)
lm(y ~ tilde.x)
## a. run a regression of y on x.
lm(y ~ x)
## c. using the attenuation bias, report the expected coefficient on
## tilde x.
new.coefficient = (1/(1+1))*3
new.coefficient
##create dataset with 200 observations and generate y, x, and u.
set.seed(12)
x <- rnorm(200, 3, 1)
u <- rnorm(200, 0, 1)
y = -2 + 3*x + u
## a. run a regression of y on x.
lm(y ~ x)
## b.Generate a mismeasured version of x, run a regression of y on
## tilde x.
e = rnorm(200, 0, 1)
tilde.x = x + e
lm(y ~ tilde.x)
## c. using the attenuation bias, report the expected coefficient on
## tilde x.
new.coefficient = (1/(1+1))*3
new.coefficient
## d. rerun the simulation with 10000 observations
set.seed(12)
x.2 <- rnorm(10000, 3, 1)
u.2 <- rnorm(10000, 0, 1)
y.2 = -2 + 3*x.2 + u.2
e.2 = rnorm(10000, 0, 1)
tilde.x.2 = x.2 + e.2
lm(y.2 ~ tilde.x.2)
lm(y ~ tilde.x)
new.coefficient
lm(y.2 ~ tilde.x.2)
## regression tilde y on x.
u.3 <- rnorm(10000, 0, 1)
tilde.y <- y.2 + u.3
lm(tilde.y ~ tilde.x.2)
double.tilde.x = x.2 + u.2
lm(y.2 ~ double.tilde.x)
lm(tilde.y ~ tilde.x.2)
double.tilde.x = x.2 + u.2
2/3 * 4 + 1/3*0 – 25/36
2/3 * 4 + 1/3*0 - 25/36
4/9
25/36
1/3*4+2/3*0 – 4/9
1/3*4+2/3*0 - 4/9
2/3*(4-100/81)-1/(3*81)
library(tidyverse)
p <- 1  # creating constants
N <- 1
lambda_1 <- 1
lambda_2 <- 0.3
y <- 0
kappa <- seq(from = 0, to = 0.5, by = 0.001) # generating a sequence for kappa
data <- tibble(kappa)
data <- data %>%
mutate(
g1 = (lambda_1*(1 - kappa) + lambda_2*kappa)/p,  # FOCs
g2 = (lambda_2*(1 - kappa) + lambda_1*kappa)/p
)
data <- data %>%
mutate(
w_reg_1 = N*y + (N*lambda_1)*((1 - kappa)*log(g1) + kappa*log(g2)) - N*p*g1, # surplus for each region using g1 and g2
w_reg_2 = N*y + (N*lambda_2)*((1 - kappa)*log(g2) + kappa*log(g1)) - N*p*g2
)
data <- data %>%
mutate(
W = w_reg_1 + w_reg_2 # society surplus
)
data <- data %>%
mutate(
g1_d = (lambda_1*(1 - kappa))/p, # FOCs
g2_d = (lambda_2*(1 - kappa))/p,
w_reg_1_d = N*y + N*lambda_1*((1 - kappa)*log(g1_d) + kappa*log(g2_d)) - N*p*g1_d, # surplus for each region
w_reg_2_d = N*y + N*lambda_2*((1 - kappa)*log(g2_d) + kappa*log(g1_d)) - N*p*g2_d,
W_d = w_reg_1_d + w_reg_2_d # society surplus
)
data <- data %>%
mutate(
g = (lambda_1 + lambda_2)/2*p, # FOC
W_c = 2*N*y + N*(lambda_1 + lambda_2)*log(g) - 2*N*p*g # surplus
)
data <- pivot_longer( # modifying data structure in order to use "color" argument
data,
cols = c(W, W_d, W_c),
names_to = "type",
values_to = "surplus"
)
data %>%
ggplot() +
geom_line(
aes(x = kappa,
y = surplus,
color = type)
) +
labs(
x = "魏",
y = "Social Surplus",
tag = "位1=1, 位2=0.3, p=1, n=1, y=0, 魏*=0.201" # for annotation at the bottom
) +
scale_color_discrete(
name = " ",
labels = c("First Break", "Centralized", "Decentralized")
) +
theme_minimal() +
theme(
plot.tag.position = c(0.2, 0), # tag options
plot.tag = element_text(size = 8)
)
gen_data <- function(lambda1, lambda2, pop, price, income){
kappa <- seq(from = 0, to = 0.5, by = 0.001)
data <- tibble(kappa)
data <- data %>%
mutate(
g1 = (lambda1*(1 - kappa) + lambda2*kappa)/price, # first best provisions
g2 = (lambda2*(1 - kappa) + lambda1*kappa)/price,
w_reg_1 = pop*income + (pop*lambda1)*((1 - kappa)*log(g1) + kappa*log(g2)) - pop*price*g1,
w_reg_2 = pop*income + (pop*lambda2)*((1 - kappa)*log(g2) + kappa*log(g1)) - pop*price*g2,
W = w_reg_1 + w_reg_2,
g1_d = (lambda1*(1 - kappa))/price, # descentralized
g2_d = (lambda2*(1 - kappa))/price,
w_reg_1_d = pop*income + pop*lambda1*((1 - kappa)*log(g1_d) + kappa*log(g2_d)) - pop*price*g1_d,
w_reg_2_d = pop*income + pop*lambda2*((1 - kappa)*log(g2_d) + kappa*log(g1_d)) - pop*price*g2_d,
W_d = w_reg_1_d + w_reg_2_d,
g = (lambda1 + lambda2)/2*price, # centralized
W_c = 2*pop*income + pop*(lambda1 + lambda2)*log(g) - 2*pop*price*g
)
data <- pivot_longer(
data,
cols = c(W, W_d, W_c),
names_to = "type",
values_to = "surplus"
)
return(data)
}
data <- gen_data(5, lambda_2, N, p, 100)
data %>%
ggplot() +
geom_line(
aes(x = kappa,
y = surplus,
color = type)
) +
labs(
x = "魏",
y = "Social Surplus"
) +
scale_color_discrete(
name = " ",
labels = c("First Break", "Centralized", "Decentralized")
) +
theme_minimal()
####################### y = 100, lambda1 = 10
data <- gen_data(10, lambda_2, N, p, 100)
data %>%
ggplot() +
geom_line(
aes(x = kappa,
y = surplus,
color = type)
) +
labs(
x = "魏",
y = "Social Surplus"
) +
scale_color_discrete(
name = " ",
labels = c("First Break", "Centralized", "Decentralized")
) +
theme_minimal()
####################### y = 100, lambda1 = lambda2 = 1
data <- gen_data(1, 1, N, p, 100)
data %>%
ggplot() +
geom_line(
aes(x = kappa,
y = surplus,
color = type)
) +
labs(
x = "魏",
y = "Social Surplus"
) +
scale_color_discrete(
name = " ",
labels = c("First Break", "Centralized", "Decentralized")
) +
theme_minimal()
####################### y = 100, lambda1 = lambda2 = 5
data <- gen_data(5, 5, N, p, 100)
data %>%
ggplot() +
geom_line(
aes(x = kappa,
y = surplus,
color = type)
) +
labs(
x = "魏",
y = "Social Surplus"
) +
scale_color_discrete(
name = " ",
labels = c("First Break", "Centralized", "Decentralized")
) +
theme_minimal()
library(sf)
install.packages("sf")
library("rnaturalearth")
library(rnaturalearth)
install.packages("rnaturalearth")
library(sf)
library(rnaturalearth)
library(tidyverse)
world <- ne_countries(scale = "medium", returnclass = "sf")
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages("rgeos")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
0.5*(51200-25600)^2 + 0.5*(0-25600)^2
0.5*(25600-12800)^2 + 0.5*(0-12800)^2
51200/2
600*(1+0.03)^4
200000/(1+0.03)^10
$200,000/(1+0.03) + $200,000/(1+0.03)^2 + $200,000/(1+0.03)^3 + … + $200,000/(1+0.03)^10
200,000/(1+0.03) + 200,000/(1+0.03)^2 + 200,000/(1+0.03)^3 + … + 200,000/(1+0.03)^10
200000/(1+0.03) + 200000/(1+0.03)^2 + 200000/(1+0.03)^3 + … + 200000/(1+0.03)^10
200000/(1+0.03) + 200000/(1+0.03)^2 + 200000/(1+0.03)^3 +
200000/(1+0.03)^4 + 200000/(1+0.03)^5 + 200000/(1+0.03)^6 +
200000/(1+0.03)^7 + 200000/(1+0.03)^8 + 200000/(1+0.03)^9
200000 + 200000/(1+0.03) + 200000/(1+0.03)^2 + 200000/(1+0.03)^3 +
200000/(1+0.03)^4 + 200000/(1+0.03)^5 + 200000/(1+0.03)^6 +
200000/(1+0.03)^7 + 200000/(1+0.03)^8 + 200000/(1+0.03)^9
50000/0.03
50000/(1+5%) + 50000/(1+5%)^2
50000/(1+0.05) + 50000/(1+0.05)^2
50000/1.05 + 50000/1.05^2
100000/1.05 + 100000/（1.05^2
100000/1.05 + 100000/1.05^2
-5000 + (-5000)/1.05
30000/1.05^2 * 1.05/0.05
571428.6 - 9761.905
-50000 + (-50000)/1.05
571428.6 - 97619.05
30000*29
-100000 + 870000
-50000 + (-50000)/1.1
30000/1.1^2 * (1.1/0.1)
-95454.55 + 272727.3
50000*(1.05^30)
768622.55/50000
1005909.14-768622.55
50000/(0.095^30)
50000(0.095^30)
50000*(0.095^30)
50000/(1.05^30)
0.5*(-425/1.12+416.67) + 0.5*(0+417.67)
227.44+166.67
1-17/20
setwd("F:/03-Analitical Politics/HW/HW3")
library(tidyverse)
options(scipen = 99)
set.seed(1998)
library(dplyr)
library(ggplot2)
library(sf)
library(chilemapas)
install.packages(chilemapas)
install.packages("chilemapas")
library(chilemapas)
library(rdrobust)
install.packages("rdrobust")
library(rdrobust)
#(a)##
dt <- read.csv(""Turnout_Chile_small.csv"")
#(a)##
dt <- read.csv(""Turnout_Chile_small.csv)
#(a)##
dt <- read.csv("Turnout_Chile_small.csv")
View(dt)
dta <- dt %>%
group_by(age) %>%
summarize(turnout = mean(voted))
View(dta)
pa <- ggplot(dta, aes(x=age, y=turnout)) +
geom_line()+
geom_point(size = 2, shape=20)
pa
pa <- ggplot(dta, aes(x=age, y=turnout)) #+
pa
pa <- ggplot(dta, aes(x=age, y=turnout)) +
geom_line()+
geom_point(size = 2, shape=20)
pa
#(c)
dtc <- dt %>%
group_by(region) %>%
summarize(turnout=mean(voted))
dtc
View(dtc)
#region codes
dtc$codigo_region <- c('11','15','16','02',
'03','04','05','10','14','12','01','06','09','07','08','13')
dtc_merge <- dtc[,-1]
View(dtc_merge)
codigos_territoriales %>%
select(matches("region")) %>%
distinct()) %>%
left_join(dtc_merge)
#map
mapdtc <- mapa_comunas %>%
generar_regiones() %>%
left_join(
codigos_territoriales %>%
select(matches("region")) %>%
distinct()) %>%
left_join(dtc_merge)
codigos_territoriales %>%
select(matches("region")) %>%
distinct()) %>%
left_join(dtc_merge)
#map
mapdtc <- mapa_comunas %>%
generar_regiones() %>%
left_join(
codigos_territoriales %>%
select(matches("region")) %>%
distinct()) %>%
left_join(dtc_merge)
View(mapdtc)
#plot
ggplot(mapdtc)+
geom_sf(aes(fill = turnout, geometry = geometry))+
theme_minimal(base_size = 13)
#plot
ggplot(mapdtc)+
geom_sf(aes(fill = turnout, geometry = geometry))+
theme_minimal(base_size = 14)
#plot
ggplot(mapdtc)+
geom_sf(aes(fill = turnout, geometry = geometry))+
theme_minimal(base_size = 50)
#plot
ggplot(mapdtc)+
geom_sf(aes(fill = turnout, geometry = geometry))+
theme_minimal(base_size = 10)
#f
mean(dt$voted)
mean(dt$runoff)
dtf <- dt %>%
group_by(age, runoff) %>%
summarise(turnout=mean(voted))
dtf$runoff <- as.factor(dtf$runoff)
pf <- ggplot(dtf,aes(x=age, y=turnout))+
geom_line(aes(colour=runoff, group=runoff))+
geom_point(aes(colour=runoff, group=runoff),size=2,shape=20)
pf
pf <- ggplot(dtf,aes(x=age, y=turnout))+
geom_line(aes(colour="red", group=runoff))+
geom_point(aes(colour="blue", group=runoff),size=2,shape=20)
pf
pf <- ggplot(dtf,aes(x=age, y=turnout))+
geom_line(aes(colour=runoff, group=runoff))+
geom_point(aes(colour="blue", group=runoff),size=2,shape=20)
pf
pf <- ggplot(dtf,aes(x=age, y=turnout))+
geom_line(aes(colour=runoff, group=runoff))+
geom_point(aes(colour=runoff, group=runoff),size=2,shape=20)
pf
#h#
dth <- dt %>%
group_by(age, female)%>%
summarise(turnout=mean(voted))
dtf$runoff
#dtf$runoff <- as.factor(dtf$runoff)
pf <- ggplot(dtf,aes(x=age, y=turnout))+
geom_line(aes(colour=runoff, group=runoff))+
geom_point(aes(colour=runoff, group=runoff),size=2,shape=20)
pf
dtf <- dt %>%
group_by(age, runoff) %>%
summarise(turnout=mean(voted))
#dtf$runoff <- as.factor(dtf$runoff)
pf <- ggplot(dtf,aes(x=age, y=turnout))+
geom_line(aes(colour=runoff, group=runoff))+
geom_point(aes(colour=runoff, group=runoff),size=2,shape=20)
pf
dtf <- dt %>%
group_by(age, runoff) %>%
summarise(turnout=mean(voted))
dtf$runoff <- as.factor(dtf$runoff)
pf <- ggplot(dtf,aes(x=age, y=turnout))+
geom_line(aes(colour=runoff, group=runoff))+
geom_point(aes(colour=runoff, group=runoff),size=2,shape=20)
pf
dth$female <- as.factor(dth$female)
ph <- ggplot(dth, aes(x=age,y=turnout))+
geom_line(aes(colour=female, group=female))+
geom_point(aes(colour=female, group=female),size=2,shape=20)
ph
#j#
dtj <- dt[which(is.na(dt$voluntary_registration==F),] %>%
group_by(age,voluntary_registration) %>%
summarise(turnout=mean(voted))
)
#j#
dtj <- dt[which(is.na(dt$voluntary_registration)==F),] %>%
group_by(age,voluntary_registration) %>%
summarise(turnout=mean(voted))
dtj$voluntary_registration <- as.factor(dtj$voluntary_registration)
pj <- ggplot(dtj, aes(x=age, y=turnout)) +
geom_line(aes(colour=voluntary_registration, group=voluntary_registration))
pj <- ggplot(dtj, aes(x=age, y=turnout)) +
geom_line(aes(colour=voluntary_registration,
group=voluntary_registration),size=2, shape=20)
pj <- ggplot(dtj, aes(x=age, y=turnout)) +
geom_line(aes(colour=voluntary_registration,
group=voluntary_registration),size=2, shape=20)
pj <- ggplot(dtj, aes(x=age, y=turnout)) +
geom_line(aes(colour=voluntary_registration,
group=voluntary_registration),size=2, shape=20)
ph <- ggplot(dth, aes(x=age,y=turnout))+
geom_line(aes(colour=female, group=female))+
geom_point(aes(colour=female, group=female),size=2,shape=20)
pj <- ggplot(dtj, aes(x=age, y=turnout)) +
geom_line(aes(colour=voluntary_registration,
group=voluntary_registration),size=2,shape=20)
pj
#install.packages('chicagomap')
#install.packages('tidycensus')
#install.packages('gapminder')
library(tidycensus)
setwd("E:/CTO Office/event data analysis")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(sf)
library(readxl)
#install.packages('usa')
library(usa)
#install.packages('chicagomap')
#install.packages('tidycensus')
#install.packages('gapminder')
library(tidycensus)
library(gapminder)
#zipcode to geography info with usa package
zcs <- usa::zipcodes
head(zcs)
# original dataset
zip <- read_excel('new_zip.xlsx')
# zipcode to geography info with usa package
zip_geo <- merge(x=zip, y=zcs, by='zip', all.x=TRUE)
zip_geo$zip <- as.character(zip_geo$zip)
# zip_geo <- zip_geo %>% filter(city == "Chicago")
# draw map with tidycensus
#census_api_key("your census API key", install = TRUE)
CENSUS_KEY <- Sys.getenv("CENSUS_API_KEY")
Sys.getenv("CENSUS_API_KEY")
mydata <- get_acs(
geography = 'zcta',
variables = 'B19013_001',
geometry = TRUE)
# separate zcta and zip code
map <- mydata %>% separate(NAME, into = c("zcta", "zip")) %>% select(zip, geometry)
df <- zip_geo %>% left_join(map, by = "zip")
# Plot
ggplot(data = df, aes(fill = frequency, geometry = geometry)) + geom_sf()+
scale_fill_distiller(name='Attendance Frequency', trans='reverse')
